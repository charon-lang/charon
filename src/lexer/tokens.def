// Keywords
TOKEN(KEYWORD_RETURN,   "return",   "^return\\b"        )
TOKEN(KEYWORD_IF,       "if",       "^if\\b"            )
TOKEN(KEYWORD_ELSE,     "else",     "^else\\b"          )
TOKEN(KEYWORD_WHILE,    "while",    "^while\\b"         )
TOKEN(KEYWORD_FUNCTION, "fn",       "^fn\\b"            )
TOKEN(KEYWORD_LET,      "let",      "^let\\b"           )
TOKEN(KEYWORD_AS,       "as",       "^as\\b"            )
TOKEN(KEYWORD_EXTERN,   "extern",   "^extern\\b"        )
TOKEN(KEYWORD_MODULE,   "module",   "^module\\b"        )
TOKEN(KEYWORD_TYPE,     "type",     "^type\\b"          )
TOKEN(KEYWORD_STRUCT,   "struct",   "^struct\\b"        )
TOKEN(KEYWORD_CONTINUE, "continue", "^continue\\b"      )
TOKEN(KEYWORD_BREAK,    "break",    "^break\\b"         )
TOKEN(KEYWORD_ENUM,     "enum",     "^enum\\b"          )
TOKEN(KEYWORD_FOR,      "for",      "^for\\b"           )
TOKEN(KEYWORD_SIZEOF,   "sizeof",   "^sizeof\\b"        )

// Constants
TOKEN(CONST_NUMBER_HEX, "number",   "^0x[a-fA-F\\d]+"   )
TOKEN(CONST_NUMBER_BIN, "number",   "^0b[01]+"          )
TOKEN(CONST_NUMBER_OCT, "number",   "^0o[0-7]+"         )
TOKEN(CONST_NUMBER_DEC, "number",   "^\\d+"             )
TOKEN(CONST_STRING,     "string",   "^\"[^\"\\n]*\""    )
TOKEN(CONST_STRING_RAW, "string",   "^''(?:.|\\n)*?''"  )
TOKEN(CONST_CHAR,       "char",     "^'[^']+'"          )
TOKEN(CONST_BOOL,       "bool",     "^(?:true|false)"   )

// Identifier
TOKEN(IDENTIFIER,   "identifier",   "^[_a-zA-Z][_a-zA-Z0-9]*"   )

// Punctuation
TOKEN(TRIPLE_PERIOD,        "...",  "^\\.\\.\\."    )
TOKEN(PERIOD,               ".",    "^\\."          )
TOKEN(DOUBLE_COLON,         "::",   "^::"           )
TOKEN(COLON,                ":",    "^:"            )
TOKEN(SEMI_COLON,           ";",    "^;"            )
TOKEN(ARROW,                "->",   "^->"           )
TOKEN(EQUAL_EQUAL,          "==",   "^=="           )
TOKEN(EQUAL,                "=",    "^="            )
TOKEN(PLUS_EQUAL,           "+=",   "^\\+="         )
TOKEN(MINUS_EQUAL,          "-=",   "^-="           )
TOKEN(SLASH_EQUAL,          "/=",   "^/="           )
TOKEN(STAR_EQUAL,           "*=",   "^\\*="         )
TOKEN(PERCENTAGE_EQUAL,     "%=",   "^%="           )
TOKEN(NOT_EQUAL,            "!=",   "^!="           )
TOKEN(NOT,                  "!",    "^!"            )
TOKEN(SLASH,                "/",    "^\\/"          )
TOKEN(PERCENTAGE,           "%",    "^%"            )
TOKEN(STAR,                 "*",    "^\\*"          )
TOKEN(PLUS,                 "+",    "^\\+"          )
TOKEN(MINUS,                "-",    "^-"            )
TOKEN(GREATER_EQUAL,        ">=",   "^>="           )
TOKEN(SHIFT_RIGHT,          ">>",   "^>>"           )
TOKEN(CARET_RIGHT,          ">",    "^>"            )
TOKEN(LESS_EQUAL,           "<=",   "^<="           )
TOKEN(SHIFT_LEFT,           "<<",   "^<<"           )
TOKEN(CARET_LEFT,           "<",    "^<"            )
TOKEN(PARENTHESES_LEFT,     "(",    "^\\("          )
TOKEN(PARENTHESES_RIGHT,    ")",    "^\\)"          )
TOKEN(BRACE_LEFT,           "{",    "^{"            )
TOKEN(BRACE_RIGHT,          "}",    "^}"            )
TOKEN(BRACKET_LEFT,         "[",    "^\\["          )
TOKEN(BRACKET_RIGHT,        "]",    "^\\]"          )
TOKEN(COMMA,                ",",    "^,"            )
TOKEN(LOGICAL_AND,          "&&",   "^&&"           )
TOKEN(LOGICAL_OR,           "||",   "^\\|\\|"       )
TOKEN(AMPERSAND,            "&",    "^&"            )
TOKEN(PIPE,                 "|",    "^\\|"          )
TOKEN(CARET,                "^",    "^\\^"          )
TOKEN(AT,                   "@",    "^@"            )