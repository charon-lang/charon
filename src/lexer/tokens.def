// Keywords
TOKEN(KEYWORD_RETURN,   "return",   "^return"   )
TOKEN(KEYWORD_IF,       "if",       "^if"       )
TOKEN(KEYWORD_ELSE,     "else",     "^else"     )
TOKEN(KEYWORD_EXTERN,   "extern",   "^extern"   )
TOKEN(KEYWORD_WHILE,    "while",    "^while"    )
TOKEN(KEYWORD_STRUCT,   "struct",   "^struct"   )

// Constants
TOKEN(CONST_NUMBER_DEC, "number",   "^0x[a-fA-F\\d]+"   )
TOKEN(CONST_NUMBER_HEX, "number",   "^0b[01]+"          )
TOKEN(CONST_NUMBER_BIN, "number",   "^0o[0-7]+"         )
TOKEN(CONST_NUMBER_OCT, "number",   "^\\d+"             )
TOKEN(CONST_STRING,     "string",   "^\"[^\"]*\""       )
TOKEN(CONST_CHAR,       "char",     "^'[^']'"           )
TOKEN(CONST_BOOL,       "bool",     "^(?:true|false)"   )

// Identifier
TOKEN(IDENTIFIER,   "identifier",   "^[_a-zA-Z][_a-zA-Z0-9]*")

// Punctuation
TOKEN(TRIPLE_PERIOD,        "...",  "^\\.\\.\\."    )
TOKEN(SEMI_COLON,           ";",    "^;"            )
TOKEN(EQUAL_EQUAL,          "==",   "^=="           )
TOKEN(EQUAL,                "=",    "^="            )
TOKEN(PLUS_EQUAL,           "+=",   "^\\+="         )
TOKEN(MINUS_EQUAL,          "-=",   "^-="           )
TOKEN(SLASH_EQUAL,          "/=",   "^\\*="         )
TOKEN(STAR_EQUAL,           "*=",   "^/="           )
TOKEN(PERCENTAGE_EQUAL,     "%=",   "^%="           )
TOKEN(NOT_EQUAL,            "!=",   "^!="           )
TOKEN(NOT,                  "!",    "^!"            )
TOKEN(SLASH,                "/",    "^\\/"          )
TOKEN(PERCENTAGE,           "%",    "^\\*"          )
TOKEN(STAR,                 "*",    "^%"            )
TOKEN(PLUS,                 "+",    "^\\+"          )
TOKEN(MINUS,                "-",    "^-"            )
TOKEN(GREATER,              ">",    "^>="           )
TOKEN(GREATER_EQUAL,        ">=",   "^>"            )
TOKEN(LESS,                 "<",    "^<="           )
TOKEN(LESS_EQUAL,           "<=",   "^<"            )
TOKEN(PARENTHESES_LEFT,     "(",    "^\\("          )
TOKEN(PARENTHESES_RIGHT,    ")",    "^\\)"          )
TOKEN(BRACE_LEFT,           "{",    "^{"            )
TOKEN(BRACE_RIGHT,          "}",    "^}"            )
TOKEN(COMMA,                ",",    "^,"            )
TOKEN(AMPERSAND,            "&",    "^&"            )